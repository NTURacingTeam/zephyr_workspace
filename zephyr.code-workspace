{
    "folders": [
        {
            "name": "zephyrproject",
            "path": "."
        },
        {
            "name": "app",
            "path": "applications/app/blink"
        }
    ],

    "settings": {
        "west": "/usr/local/bin/west",
        "zephyr_sdk_path": "/opt/toolchains/zephyr-sdk-${env:ZSDK_VERSION}",
        "twister":  {
            "host_test_arch": "qemu_x86",
        },
        // board support package
        "bsp": {
            "cpu": "",  // must be used if multi core system (put _m4 or _m7 here for example)
            "soc": "stm32_g474re",
            "board": "nucleo_g474re",
            // "soc": "stm32_g431kb",
            // "board": "nucleo_g431kb",
            // "soc": "stm32_h743zi",
            // "board": "nucleo_h743zi",
            // "soc": "esp32",
            // "board": "esp32",
            // "board": "native_sim",
            "vendor": "st",
            "board_root": "${workspaceFolder:zephyrproject}/zephyr/boards",
            // "board_root": "${workspaceFolder:zephyrproject}/applications/boards",
            "board_path": "${config:bsp.board_root}/${config:bsp.vendor}/${config:bsp.board}",
            "debug_config": "${config:bsp.board_path}/support/openocd.cfg"
        },

        // application
        "app": {
            "name": "${workspaceFolder:app}",
            "build_dir": "${workspaceFolder:app}/build",
            "cmake_opts": "" // "-DCONFIG_COMPILER_SAVE_TEMPS=y"
        },

        "C_Cpp.default.compilerPath": "${config:zephyr_sdk_path}/bin/arm-zephyr-eabi-gcc",
        "C_Cpp.default.compileCommands": "${config:app.build_dir}/compile_commands.json",
        "C_Cpp.default.includePath": [
            "${workspaceFolder:zephyrproject}/zephyr",
            "${config:zephyr_sdk_path}/arm-zephyr-eabi/include",
            "${config:zephyr_sdk_path}/arm-zephyr-eabi/sys-include"
        ],

        "[c]": {
        "editor.defaultFormatter": "xaver.clang-format",
        },
        "[cpp]": {
            "editor.defaultFormatter": "xaver.clang-format"
        },

        "files.associations": {
            "*.overlay": "dts",
            "Kconfig": "plaintext",
        },
    }
}